{"version":3,"sources":["styles/select1.png","components/Timer.js","components/game.js","components/gameOver.js","components/instruction.js","components/difficulty.js","serviceWorker.js","index.js"],"names":["module","exports","Timer","id","style","backgroundColor","border","autoStart","onTick","this","props","setTimeHandler","date","Date","now","seconds","onComplete","onTimerEndHandler","renderer","hours","minutes","completed","Component","Game","componentDidMount","random","state","disabled","typing","word","guessed","wordsLeft","letters","score","three","four","five","six","disabledButtons","error","scoreDisplay","displayedWords","btns","level","words","Object","keys","data","values","shuffle","shuffled","split","sort","Math","join","replace","setState","resetword","rand","floor","length","includes","console","log","letterClicked","e","a","slice","target","document","getElementById","color","value","toUpperCase","reset","forEach","i","genButtons","map","letter","key","onClick","width","height","borderRadius","marginLeft","fontSize","fontWeight","boxShadow","textShadow","leftWords","e1","indx","indexOf","splice","localStorage","setItem","enter","x","toLowerCase","setTimeout","display","st","total","backspace","y","pop","z","d","p","end","history","push","GameOver","getItem","missed","gw","mw","genWrds","Instruction","open","handleClose","close","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Difficulty","timed","modal","instruction","start","handle","backgroundImage","img","Boolean","window","location","hostname","match","Routing","path","exact","component","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9a3c56ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/select1.2d30a497.png\";","import React, { Component } from 'react';\r\nimport Countdown from 'react-countdown';\r\n\r\nexport class Timer extends Component {\r\n\trender() {\r\n       \r\n\t\treturn (\r\n\t\t\t<div id='timer' style={{  backgroundColor:'white', border:'3px black solid'}}>\r\n\t\t\t\t<h4>Time: </h4>&nbsp; \r\n\t\t\t\t<Countdown\r\n\t\t\t\t\tautoStart={true}\r\n\t\t\t\t\tonTick={this.props.setTimeHandler}\r\n\t\t\t\t\tdate={Date.now() + this.props.seconds}\r\n\t\t\t\t\tonComplete={this.props.onTimerEndHandler}\r\n\t\t\t\t\trenderer={({ hours, minutes, seconds, completed }) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t0{minutes} : {seconds}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Timer;","import React, { Component } from 'react'\r\nimport data from './Words.json'\r\nimport '../styles/game.css'\r\nimport Timer from './Timer'\r\nimport { Link } from 'react-router-dom'\r\nclass Game extends Component {\r\n    constructor()\r\n    {\r\n        super()\r\n        this.state= {\r\n            \r\n            disabled:[0,0,0,0,0,0,0,0,0,0,0,0],\r\n            typing:[],\r\n            word :'',\r\n            guessed: [],\r\n            wordsLeft:[],\r\n            letters: [],\r\n            seconds:180000,\r\n            score:0,\r\n            three:[],\r\n            four:[],\r\n            five:[],\r\n            six:[],\r\n            disabledButtons:[],\r\n            error:null,\r\n            random:'',\r\n            scoreDisplay:'',\r\n            displayedWords : [],\r\n            btns:[],\r\n            level:1,\r\n            \r\n            \r\n        }\r\n       \r\n        \r\n\r\n\r\n    }\r\n    componentDidMount = () =>\r\n    {\r\n        this.random()     \r\n    }\r\n    \r\n  \r\n\r\n    render() {\r\n\r\n        \r\n    \r\n        \r\n        const words  = Object.keys(data)\r\n        let values =data[this.state.random]\r\n\r\n        this.shuffle=() =>{\r\n            \r\n            \r\n            let array = this.state.random.split('')\r\n            var shuffled = array.sort(() => Math.random() - 0.5)\r\n            \r\n            if(shuffled.join('')===this.state.random)\r\n            {\r\n            \r\n            this.shuffle()\r\n            }\r\n            else\r\n            {\r\n            shuffled= shuffled.join('').replace(/[^A-Z0-9]/ig, \"\");\r\n            this.setState({word:shuffled})\r\n            this.resetword()\r\n            }\r\n        }\r\n                 \r\n\r\n\r\n    this.random =() =>\r\n    {\r\n            \r\n\r\n        let rand= words[Math.floor(Math.random()*words.length)];\r\n\r\n        \r\n        if(rand.length>=7 && rand.length<=12 && this.state.displayedWords.includes(rand)===false)\r\n        {\r\n            console.log(rand)   \r\n            this.setState({displayedWords:[...this.state.displayedWords,rand]})\r\n            this.setState({random:rand}, () => this.shuffle())\r\n\r\n        }\r\n        else\r\n        {\r\n            this.random()\r\n        }\r\n   \r\n    }\r\n\r\n                     \r\n      \r\n\r\n\r\n\r\n\r\n    this.letterClicked = (e) =>\r\n    {\r\n        let a = this.state.disabled.slice()\r\n        a[e.target.id] = 1\r\n        this.setState({disabledButtons:[...this.state.disabledButtons,e.target.id]})\r\n        this.setState({disabled:a})\r\n        document.getElementById(e.target.id).style.backgroundColor='#F53F32'\r\n        document.getElementById(e.target.id).style.color='black'\r\n\r\n        this.setState({typing:this.state.typing+e.target.value.toUpperCase()})\r\n        this.setState({btns:[...this.state.btns,e.target.id]})\r\n       \r\n    }\r\n    \r\n\r\n    \r\n\r\n  \r\n\r\n    this.reset=()=>\r\n    {\r\n      this.setState({typing:''})\r\n      let a = [0,0,0,0,0,0,0,0,0,0,0,0]\r\n      this.setState({disabled:a})\r\n      this.random()\r\n      this.setState({guessed:[]})   \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n     this.resetword = () =>\r\n     {\r\n        this.setState({typing:''})\r\n        let a = [0,0,0,0,0,0,0,0,0,0,0,0]\r\n        this.setState({disabled:a})\r\n        console.log(this.state.btns)\r\n        if(this.state.btns.length>0)\r\n        {\r\n        this.state.btns.forEach((i)=>{\r\n           \r\n            document.getElementById(i).style.backgroundColor='#fccde2'\r\n            document.getElementById(i).style.color='#0e153a'\r\n \r\n    \r\n    })} \r\n    \r\n    this.setState({btns:[]})\r\n         \r\n     }\r\n\r\n\r\n\r\n\r\n\r\n     this.genButtons = () =>\r\n     {\r\n     let word = this.state.word\r\n     let alph = word.split('').map((letter,i) => <button id={i} value={letter} key={i}  disabled={this.state.disabled[i]===1?true:false} onClick={(e,i) => this.letterClicked(e,i)} style={{width:'50px',height:'45px',border:'2px black solid',borderRadius:'4px',marginLeft:'5px',backgroundColor:'#fccde2',color:'#0e153a',fontSize:'16px',fontWeight:'bold',boxShadow:'2px 2px 5px black',textShadow:'0.5px 1px black'}}>{letter.toUpperCase()}</button>)\r\n     return alph\r\n     }\r\n \r\n \r\n \r\n\r\n     this.leftWords = () =>\r\n     {\r\n         this.state.guessed.forEach((e1)=>{\r\n\r\n            if(values.includes(e1)===true)\r\n            {\r\n                const indx = values.indexOf(e1)\r\n                console.log(values[indx])\r\n                 values.splice(indx,1)\r\n\r\n            }\r\n         })\r\n\r\n         this.setState({wordsLeft:values},()=>{\r\n         localStorage.setItem('missed',this.state.wordsLeft)\r\n\r\n         })\r\n\r\n     }\r\n\r\n\r\n\r\n\r\n\r\n     this.enter = () =>{\r\n        \r\n        let x = this.state.typing.toLowerCase()\r\n        \r\n        \r\n        if(x.length===0)\r\n        {\r\n            this.setState({error:'Enter a Word!'})\r\n            setTimeout(()=>\r\n            { \r\n                this.setState({error:''}) \r\n            }\r\n            \r\n            \r\n            , 2000);\r\n          this.resetword()\r\n            \r\n        }\r\n        else\r\n        {\r\n        if(x.length>2)\r\n        {\r\n            if(x.length>=7)\r\n            {\r\n                this.setState({error:'Word Should Not Exceed Seven Letters!'})\r\n                setTimeout(()=>\r\n                { \r\n                    this.setState({error:''}) \r\n                }\r\n                \r\n                \r\n                , 2000);\r\n            }\r\n\r\n        if(values.includes(x) || this.state.guessed.includes(x))\r\n        {\r\n            \r\n\r\n            if(this.state.guessed.includes(x)===false)\r\n            {\r\n           this.setState({guessed:[...this.state.guessed,x]}, ()=>\r\n           {\r\n            this.leftWords()\r\n           })\r\n        \r\n           if(x.length===3)\r\n           {\r\n               if(!this.state.three.includes(x))\r\n               {\r\n               this.setState({three:[...this.state.three,x]})\r\n               this.setState({score:this.state.score+5},()=>\r\n               {\r\n                if(this.state.score>=100*this.state.level)\r\n                {\r\n                    this.setState({level:this.state.level+1} ,()=>{\r\n                            if(this.state.level===2)\r\n                            {\r\n                                document.getElementById('skip').style.display='inline'\r\n                                this.setState({seconds:150000})\r\n                            }\r\n                            else if(this.state.level===3)\r\n                            {\r\n                                this.setState({seconds:120000})\r\n                            }\r\n                            else if(this.state.level===4)\r\n                            {\r\n                                this.setState({seconds:90000})\r\n                            }\r\n                            else\r\n                            {\r\n                                this.setState({seconds:60000})\r\n                            }\r\n\r\n                    })\r\n                    \r\n                }\r\n               })\r\n               }\r\n               else\r\n               {\r\n                this.setState({error:'Word Already Exist!'})\r\n                setTimeout(()=>\r\n                { \r\n                    this.setState({error:''}) \r\n                }\r\n                \r\n                \r\n                , 2000);\r\n               }\r\n        }\r\n           if(x.length===4)\r\n           {\r\n            if(!this.state.four.includes(x))\r\n            {\r\n            this.setState({four:[...this.state.four,x]})\r\n            this.setState({score:this.state.score+10},()=>{\r\n                if(this.state.score>=100*this.state.level)\r\n                {\r\n                    this.setState({level:this.state.level+1} ,()=>{\r\n                        if(this.state.level===2)\r\n                        {\r\n                            document.getElementById('skip').style.display='inline'\r\n                            this.setState({seconds:150000})\r\n                        }\r\n                        else if(this.state.level===3)\r\n                        {\r\n                            this.setState({seconds:120000})\r\n                        }\r\n                        else if(this.state.level===4)\r\n                        {\r\n                            this.setState({seconds:90000})\r\n                        }\r\n                        else\r\n                        {\r\n                            this.setState({seconds:60000})\r\n                        }\r\n\r\n                })\r\n                \r\n                }\r\n                }\r\n            )\r\n\r\n            }\r\n            else\r\n            {\r\n             this.setState({error:'Word Already Exist!'})\r\n             setTimeout(()=>\r\n             { \r\n                 this.setState({error:''}) \r\n             }\r\n             \r\n             \r\n             , 2000);\r\n            }\r\n           }\r\n            if(this.state.typing.length===5)\r\n           {\r\n            if(!this.state.five.includes(x))\r\n            {\r\n            this.setState({five:[...this.state.five,x]})\r\n            this.setState({score:this.state.score+20}, () =>\r\n            {\r\n                if(this.state.score>=100*this.state.level)\r\n                {\r\n                    this.setState({level:this.state.level+1} ,()=>{\r\n                        if(this.state.level===2)\r\n                        {\r\n                           document.getElementById('skip').style.display='inline'\r\n\r\n                            this.setState({seconds:150000})\r\n                        }\r\n                        else if(this.state.level===3)\r\n                        {\r\n                            this.setState({seconds:120000})\r\n                        }\r\n                        else if(this.state.level===4)\r\n                        {\r\n                            this.setState({seconds:90000})\r\n                        }\r\n                        else\r\n                        {\r\n                            this.setState({seconds:60000})\r\n                        }\r\n\r\n                })\r\n                \r\n                }\r\n            } )\r\n\r\n            }\r\n            else\r\n            {\r\n             this.setState({error:'Word Already Exist!'})\r\n             setTimeout(()=>\r\n             { \r\n                 this.setState({error:''}) \r\n             }\r\n             \r\n             \r\n             , 2000);\r\n            }           }\r\n           if(this.state.typing.length===6)\r\n           {\r\n            if(!this.state.six.includes(x))\r\n               {\r\n               this.setState({six:[...this.state.six,x]})\r\n               this.setState({score:this.state.score+100}, () => {\r\n                if(this.state.score>=100*this.state.level)\r\n                {\r\n                    this.setState({level:this.state.level+1} ,()=>{\r\n                        if(this.state.level===2)\r\n                        {\r\n                           document.getElementById('skip').style.display='inline'\r\n\r\n                            this.setState({seconds:150000})\r\n                        }\r\n                        else if(this.state.level===3)\r\n                        {\r\n                            this.setState({seconds:120000})\r\n                        }\r\n                        else if(this.state.level===4)\r\n                        {\r\n                            this.setState({seconds:90000})\r\n                        }\r\n                        else\r\n                        {\r\n                            this.setState({seconds:60000})\r\n                        }\r\n\r\n                })\r\n                \r\n                }\r\n               })\r\n\r\n               }\r\n               else\r\n               {\r\n                this.setState({error:'Word Already Exist!'})\r\n                setTimeout(()=>\r\n                { \r\n                    this.setState({error:''}) \r\n                }\r\n                \r\n                \r\n                , 2000);\r\n               }\r\n           }\r\n           \r\n\r\n\r\n        \r\n\r\n           \r\n           this.resetword()\r\n           }\r\n\r\n           else\r\n           {\r\n            this.setState({error:'Word Already Exists!'})\r\n            setTimeout(()=>\r\n            { \r\n                this.setState({error:''}) \r\n            }\r\n            \r\n            \r\n            , 2000);\r\n          this.resetword()\r\n\r\n           }\r\n         \r\n        }\r\n        else\r\n        {\r\n            this.setState({error:'Enter a Valid English Word!'})\r\n            if(this.state.score>0)\r\n            {\r\n                if(this.state.score===1)\r\n                {\r\n                    this.setState({score:0})\r\n\r\n                }\r\n                else\r\n                {\r\n                this.setState({score:this.state.score-2})\r\n                }\r\n            }\r\n\r\n                \r\n            setTimeout(()=>\r\n            { \r\n                this.setState({error:''}) \r\n            }\r\n            \r\n            \r\n            , 2000);\r\n          this.resetword()\r\n        }\r\n\r\n     }\r\n     \r\n     else\r\n     {\r\n        this.setState({error:\"Single And Two Letter Words Don't Count!\"})\r\n        if(this.state.score>0)\r\n            {\r\n                if(this.state.score===1)\r\n                {\r\n                    this.setState({score:0})\r\n\r\n                }\r\n                else{\r\n                this.setState({score:this.state.score-2})\r\n                }\r\n        \r\n        }\r\n        setTimeout(()=>\r\n        { \r\n            this.setState({error:''}) \r\n        }\r\n        \r\n        \r\n        , 2000);\r\n        this.resetword() \r\n    }\r\n    }\r\n\r\n \r\n\r\n}\r\n\r\n\r\n\r\n     this.setTimeHandler = (data) => {\r\n\t\r\n\t\tthis.setState((st) => {\r\n\t\t\treturn {\r\n\t\t\t\tseconds: data.total,\r\n\t\t\t}\r\n\t\t})\r\n    }\r\n    \r\n\r\n\r\n\r\n\r\n    this.backspace = () =>\r\n    {\r\n    \r\n    let y = this.state.typing.split('')\r\n    y.pop()\r\n    this.setState({typing:y.join('')})\r\n    let z = this.state.disabledButtons.pop()\r\n    let d = this.state.disabled \r\n    d[z] = 0\r\n    this.setState({disabled:d})\r\n    if(this.state.btns.length>0)\r\n    {\r\n    let p = this.state.btns.pop()\r\n    document.getElementById(p).style.backgroundColor='#fccde2'\r\n    document.getElementById(p).style.color='#0e153a'\r\n    }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nthis.end = () =>\r\n{\r\n    localStorage.setItem('score',this.state.score)\r\n    localStorage.setItem('guessed',this.state.guessed)\r\n    this.props.history.push('/GameOver')\r\n    \r\n}\r\n\r\nthis.GameOver = () =>\r\n {\r\n   if(this.state.seconds!==1000 && this.state.seconds>1000)\r\n   {\r\n   \r\n   }\r\n   else\r\n   {\r\n    setTimeout(()=>\r\n    { \r\n    this.end()   \r\n        \r\n    }\r\n    \r\n    \r\n    , 2000);\r\n\r\n    console.log(this.state.seconds)\r\n   }\r\n }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        return (\r\n            <div id='game'>\r\n            \r\n                <h1 id='wg'>Word Scramble</h1>\r\n                \r\n            <div id='ts'>\r\n                <div id='score'>\r\n                    <h5>SCORE:</h5>\r\n                    <h4 id='scr'>{this.state.score}</h4>\r\n                </div>\r\n                <div id='timer'> \r\n                \r\n                \r\n    \r\n                <h5 id='sec'>   \r\n                {\r\n                localStorage.getItem('dif')==='timed'?\r\n                <Timer \r\n              onTimerEndHandler={this.GameOver()} \r\n              seconds={this.state.seconds} \r\n               setTimeHandler={this.setTimeHandler} />\r\n                :\r\n                null\r\n                \r\n          \r\n                }\r\n\r\n\r\n                </h5>\r\n                </div>\r\n                <div id='level'>\r\n                    <h5>LEVEL:</h5>\r\n                    <h4 id='lvl'>{this.state.level}</h4>\r\n                \r\n                </div>\r\n            </div>    \r\n            <br />               \r\n            <br />               \r\n               \r\n        <div id='words'>\r\n            {this.state.typing}\r\n\r\n        </div>\r\n               \r\n               <br />\r\n               <br />\r\n\r\n                <div id='keyboard'>\r\n                {this.genButtons()}\r\n                </div>\r\n\r\n                <br /><br />\r\n                <div><h2 id='error'>{this.state.error}</h2></div>\r\n                <br />\r\n                <button onClick={()=>this.enter()} id='enter'>ENTER</button>&nbsp;\r\n                <button onClick={()=>this.backspace()} id='backspace'>BACKSPACE</button>\r\n                <br /><br/>\r\n                <button onClick={()=>this.shuffle()} id='jumble'>JUMBLE</button>&nbsp; \r\n                 <button  onClick={()=>this.reset()} id='skip' >SKIP</button> &nbsp;\r\n                 <button onClick={()=>this.end()} id='end'>END GAME!</button>\r\n                \r\n\r\n                 <div id='wordBoxes'>\r\n\r\n                     <div id='three'>\r\n                         \r\n\r\n                     <h5 id='head'>THREE LETTER WORDS</h5>\r\n                     <hr />\r\n                     {this.state.three.map((words,i)=> <h2 key={i}> {words.toUpperCase()} </h2>)}\r\n                     \r\n                     </div>\r\n\r\n                     <div id='four'>\r\n\r\n                     <h5 id='head'>FOUR LETTER WORDS</h5>\r\n                     <hr />\r\n                     {this.state.four.map((words,i)=> <h2 key={i}> {words.toUpperCase()} </h2>)}\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                    <div id='five'>\r\n\r\n                     <h5 id='head'>FIVE LETTER WORDS</h5>\r\n                     <hr />\r\n                     {this.state.five.map((words,i)=> <h2 key={i}> {words.toUpperCase()} </h2>)}\r\n\r\n                    </div>\r\n\r\n\r\n                    <div id='six'>\r\n\r\n                     <h5 id='head'>SIX LETTER WORDS</h5>\r\n                     <hr />\r\n                     {this.state.six.map((words,i)=> <h2 key={i}> {words.toUpperCase()} </h2>)}\r\n\r\n                    </div>\r\n\r\n\r\n                 </div>\r\n\r\n                \r\n\r\n            </div>\r\n        )\r\n     \r\n    }\r\n\r\n}\r\n\r\nexport default Game ","import React, { Component } from 'react'\r\nimport '../styles/gameOver.css'\r\nclass GameOver extends Component {\r\n    \r\n    constructor()\r\n    {\r\n        super()\r\n\r\n        this.state = {\r\n            guessed:localStorage.getItem('guessed').split(',') ,\r\n            missed: localStorage.getItem('missed').split(',')\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        \r\n     let gw =''\r\n     let mw = ''\r\n    this.genWrds = () =>\r\n        {\r\n            gw =  this.state.guessed.map((word,i) => <h2 id={i}>{word.toUpperCase()}</h2> )\r\n            mw =  this.state.missed.map((word,i) => <h2 id={i}>{word.toUpperCase()}</h2>)\r\n\r\n            return(gw)\r\n        }\r\n\r\n        this.push = (e) => \r\n        {\r\n            if(e.target.id==='mm')\r\n            {\r\n            this.props.history.push('/')\r\n            }\r\n            if(e.target.id=='cn')\r\n            {\r\n                this.props.history.push('/Game')\r\n            }\r\n    \r\n    }\r\n        \r\n        this.genWrds()\r\n        return (\r\n            <div id='gameOver'>\r\n                <h2 id='go'>GAME OVER!</h2>\r\n                <div id='results'>\r\n                <h2 id='scre'>SCORE: <span>{localStorage.getItem('score')}</span></h2>\r\n                 <div id='wrdscr'>\r\n                     <div id='crtwrds'>\r\n                     <div><h2 id='he'>CORRECT WORDS!</h2>\r\n                     <hr /></div>\r\n                     <br/>\r\n                     <div id='hr'>\r\n                         {gw}\r\n                     </div>\r\n                     \r\n                     \r\n                     </div>\r\n\r\n                     <div id='msdwrds'>\r\n                    <div><h2 id='he'>MISSED WORDS!</h2>\r\n                    <hr />\r\n                    </div>\r\n                    <br/>\r\n\r\n                     <div id='hr'>\r\n                        {mw}\r\n                        </div>\r\n\r\n                    \r\n\r\n                     </div>\r\n                 </div>\r\n                 <br/>\r\n                 \r\n                 <button onClick={(e)=>this.push(e)} id='mm'>MAIN MENU</button>\r\n                 <button onClick={(e)=>this.push(e)} id='cn'>RETRY!</button>\r\n\r\n                 \r\n                </div>\r\n              \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default GameOver","import React, { Component } from 'react'\r\nimport Backdrop from '@material-ui/core/Backdrop'\r\nimport Fade from '@material-ui/core/Fade'\r\nimport Modal from '@material-ui/core/Modal'\r\nimport '../styles/instruction.css'\r\n\r\n class Instruction extends Component {\r\n    constructor()\r\n    {\r\n        super()\r\n        this.state = {\r\n            open:true\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        this.handleClose = () =>\r\n        {\r\n            this.setState({open:false})\r\n            this.props.close()\r\n        } \r\n\r\n        return (\r\n            <div>\r\n        <Modal\r\n        id='modal'\r\n        open={this.state.open}\r\n        onClose={this.handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={this.state.open}>\r\n          <div id='inst'>\r\n              <h3 id='gi'>GAME INSTRUCTIONS!</h3>\r\n              <hr />\r\n            <div id='lst'>\r\n                <ul>\r\n                    \r\n                    <li>In <b>FREE-PLAY</b> mode there is no time limit.</li><br />\r\n                    <li>In <b>TIMED</b> mode you will have <b>3 Mins</b> at <b>Level 1</b> and <b>30 Sec </b> will be reduced in further levels.</li><br />\r\n                    <li>From <b>Level 5</b> the time will be reduced to <b>1 Min</b>.</li><br />\r\n                    <li>A jumbled word will be displayed on screen.</li><br />\r\n                    <li>You have to form Three,Four,Five or Six letter words from the jumbled word.</li><br />\r\n                    <li>For each incorrect word <b>2 Points</b> will be reduced from the score.</li><br />\r\n                    <li>Score <b>100 Points</b> in each level to move on to the next level.</li><br />\r\n                    <li>At <b>Level 1</b> you will not have the <b>SKIP Button</b>.</li><br />\r\n                    <li>From <b>Level 2</b> you can <b>SKIP</b> the words if you want.</li><br />\r\n                    <li><b>5 Points</b>,<b>10 Points</b>,<b>20 Points</b> and <b>100 Points</b> will be awarded \r\n                    to each correct <b>Three</b>,<b>Four</b>,<b>Five</b> and <b>Six</b> letter words respectively.\r\n                    </li><br />\r\n\r\n\r\n\r\n                    \r\n\r\n\r\n\r\n\r\n\r\n                </ul>\r\n\r\n            </div>\r\n\r\n                \r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Instruction","import React, { Component } from 'react'\r\nimport '../styles/difficulty.css'\r\nimport img from '../styles/select1.png'\r\nimport Instruction from './instruction'\r\n\r\n\r\n\r\n\r\nclass Difficulty extends Component {\r\n\r\n    constructor()\r\n    {\r\n        super()\r\n        this.state = \r\n        {\r\n            timed:'timed',\r\n            modal:null,\r\n        }\r\n    }\r\n    render() {\r\n            \r\n        \r\n        this.instruction = () =>\r\n        {\r\n            this.setState({modal:true})\r\n        }\r\n\r\n        this.close = () =>\r\n        {\r\n            this.setState({modal:false})\r\n        }\r\n\r\n\r\n         this.start = () =>\r\n         {\r\n             localStorage.setItem('dif',this.state.timed)\r\n             this.props.history.push('/Game')\r\n         }\r\n\r\n         this.handle = (e) =>\r\n         {\r\n             \r\n           if(e.target.id==='Timed')\r\n           {\r\n               document.getElementById('Timed').style.backgroundImage= `url(${img})`\r\n               document.getElementById('free').style.backgroundImage= 'none'\r\n               this.setState({timed:'timed'})\r\n           }\r\n           else\r\n           {\r\n            document.getElementById('free').style.backgroundImage= `url(${img})`\r\n            document.getElementById('Timed').style.backgroundImage= 'none'\r\n               this.setState({timed:'free'})\r\n           }\r\n         }\r\n\r\n\r\n         \r\n        return (\r\n            <div id='select'>\r\n                \r\n                   <h2 id='title'>WORD SCRAMBLE</h2> \r\n               \r\n                <div id='diff'>\r\n                    <h3 id='subHead'>Select Difficulty</h3>\r\n                    \r\n                    \r\n                        <h2 id='Timed' onClick={(e)=>this.handle(e)}>TIMED MODE</h2><br /><br />\r\n                        <h2 id='free' onClick={(e)=>this.handle(e)}>FREE-PLAY MODE</h2>\r\n                        {this.state.modal===true?\r\n                        \r\n                            <Instruction close={this.close}/>\r\n                            :\r\n                            null\r\n                        }\r\n                        <br/>\r\n                        <button id='start' onClick={()=>this.start()}>PLAY!</button>\r\n                        <br />\r\n                        <br />\r\n                        \r\n                        <button id='instruction' onClick={()=>this.instruction()}>INSTRUCTIONS!</button>\r\n              \r\n\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Difficulty","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n HashRouter as Router,\n  Route,\n  Switch\n  \n} from \"react-router-dom\";\nimport Game from './components/game';\nimport GameOver from './components/gameOver'\nimport Difficulty from './components/difficulty'\nimport * as serviceWorker from './serviceWorker';\n\n\nconst Routing = (\n  <Router>\n    <div id = 'routing-container'>\n      <Switch>\n      <Route path= '/' exact component={Difficulty}></Route>\n      <Route path= '/Game' exact component={Game}></Route>\n      <Route path= '/GameOver' exact component={GameOver}></Route>\n      <Route path = '*' component = {()=>'404 NOT FOUND'}></Route>\n      </Switch>\n    </div>\n  </Router>\n)\n\n\n\n\nReactDOM.render(\n\n  Routing,\n  document.getElementById('root')\n);\n\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}